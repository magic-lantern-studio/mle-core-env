# -*- Makefile -*-
#
#  Copyright (C) 2000-2007  Wizzer Works
#
#  Wizzer Works makes available all content in this file ("Content").
#  Unless otherwise indicated below, the Content is provided to you
#  under the terms and conditions of the Common Public License Version 1.0
#  ("CPL"). A copy of the CPL is available at
#
#      http://opensource.org/licenses/cpl1.0.php
#
#  For purposes of the CPL, "Program" will mean the Content.
#
#  For information concerning this Makefile, contact Mark S. Millard,
#  of Wizzer Works at msm@wizzerworks.com.
#
#*************************************************************************
#
# ismcommonrules - rules that should be common to all Makefiles
# for a particular ISM
#
#*************************************************************************

#
# Bring in commonrules
#
include $(COMMONRULES)

#
# Create standard target for collect
#
ifdef NEED_THISPREF
collect: $(THISPREF)collect
endif

#
# Fakemake rules! :-)
#
FAKEMAKERULE = VERSION="$(CUR_VERSION)" \
	SOURCEFILES="$(SOURCES) $(IDLFILES) $(FM_OTHER_FILES)" \
	HEADERS="$(HEADERS)" \
	DEPENDS="$(FM_PROJECT_DEPENDS)" \
	FOLDERS="$(FM_FOLDERS)" \
	TARGETS="$(TARGETS)" \
	ISM_TARGET="$(FAKEMAKE_ISM_TARGET)" \
	EXCLUDE="$(FM_EXCLUDE)" \
	VPATH="$(VPATH)" \
	LEAF_DEPTH="$(LEAF_DEPTH)" \
	ISM_DEPTH="$(ISM_DEPTH)" \
	$(FAKEMAKE) $(FAKEDB)

ifdef NEED_THISPREF
fakemake_collect: $(THISPREF)fakemake_collect
endif

# Allow subdirectories to skip fakemake collection. This is useful if
# .dsp files are checked into the tree.
ifdef SKIP_FAKEMAKE
$(THISPREF)fakemake_collect:
	@echo "Skipping fakemake..."
else

ifdef FAKEMAKE_DEPENDS
$(THISPREF)fakemake_collect: $(THISPREF)depends
else
$(THISPREF)fakemake_collect:
endif
	@echo "Collecting FakeMake data."
	@$(FAKEMAKERULE)

endif

$(FAKEMAKEFILE):
	@echo "Building fake workspace \"$(FAKEMAKEFILE)\"."
	@MAKE="$(MAKE)" \
	MAKE_SHELL="$(SHELL)" \
	MLE_ROOT="$(MLE_ROOT)" \
	WORKSPACE_NAME="$(FAKEMAKEFILE)" \
	$(FAKEMAKEBUILD) $(FAKEDB)
	@$(RM) $(FAKEMAKEFILE:.dsw=.ncb) $(FAKEMAKEFILE:.dsw=.opt)

#
# Automatic Cocoon documentation rules
# (makedocs uese the fakemake database to do its work)
#
docs: fakemake_collect
	@echo "Building Documentation."
	@ISM_NAME="$(ISM_NAME)" \
	DOC_URLROOT="$(DOC_URLROOT)" \
	DOC_DESTINATION="$(DOC_DESTINATION)" \
	DOC_CONFIG_TEMPLATE="$(DOC_CONFIG_TEMPLATE)" \
	$(MAKEDOCS) $(FAKEDB)

#*************************************************************************
#
# rules for automatic version resource generation
#
#*************************************************************************

RC_VERSION_RULE = RC_FILE_VERSION="$(RC_FILE_VERSION)" \
	RC_PRODUCT_VERSION="$(RC_PRODUCT_VERSION)" \
	RC_VERSION_COMMENT=$(RC_VERSION_COMMENT) \
	TRADEMARKS=$(ISM_TRADEMARKS) \
	COPYRIGHT=$(ISM_COPYRIGHT) \
	IS5PRODUCT="$(IS5PRODUCT)" \
	TARGETS="$(TARGETS)" \
	ISM_ALPHANUM="$(ISM_ALPHANUM)" \
	COMPANY_NAME=$(COMPANY_NAME) \
	$(RC_VERSION_GENERATOR) $(RC_VERSION_OPTS)

$(RC_VERSION_RC):
	$(RC_VERSION_RULE)

$(RC_VERSION_RES): $(RC_VERSION_RC)
	$(RCF) `pwd2`/$(LEAF_DEPTH)/$(RC_VERSION_RC)
